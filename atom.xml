<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rocsun</title>
  
  
  <link href="https://rocsun.github.io/atom.xml" rel="self"/>
  
  <link href="https://rocsun.github.io/"/>
  <updated>2020-11-04T08:26:29.717Z</updated>
  <id>https://rocsun.github.io/</id>
  
  <author>
    <name>Rocsun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Nginx搭建Http文件服务器</title>
    <link href="https://rocsun.github.io/2020/11/03/file-server/"/>
    <id>https://rocsun.github.io/2020/11/03/file-server/</id>
    <published>2020-11-03T04:30:28.000Z</published>
    <updated>2020-11-04T08:26:29.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间将GitHub上的项目<a href="https://github.com/nondanee/UnblockNeteaseMusic">UnblockNeteaseMusic</a>做成了可以一键安装配置的<a href="http://39.106.23.242:2333/%E7%BD%91%E6%8A%91%E4%BA%91%E5%AE%89%E8%A3%85%E5%8C%85.exe">可安装程序</a>(<a href="https://rocsun.github.io/">UnblockNeteaseMusic一键搭建</a>),需要能够下载，因此使用Nginx来搭建Http文件服务器来提供下载功能。</p><hr><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>由于我使用的是阿里云服务器，系统是centos，因此安装Nginx非常简单，直接<code>sudo yum install nginx</code>，如果是ubuntu系统，则使用<code>sudo apt-get install nginx</code>即可。当然也可以到Nginx官网下载压缩包直接解压使用或者源码安装。</p><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201104142235.png" alt="安装Nginx"></p><blockquote><p>我这里由于使用的是root账号，所以没有加sudo，如果不是root一定记得加sudo，后面的命也都是。</p></blockquote><hr><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>如果使用yum或者apt-get安装，Nginx的配置文件默认为/etc/nginx/nginx.conf。修改配置文件<code>sudo vim /etc/nginx/nginx.conf</code></p><h3 id="首先在http中加上"><a href="#首先在http中加上" class="headerlink" title="首先在http中加上"></a>首先在http中加上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">autoindex on;# 显示目录</span><br><span class="line">autoindex_exact_size on;# 显示文件大小</span><br><span class="line">autoindex_localtime on;# 显示文件时间</span><br><span class="line">charset utf-8,gbk;#解决中文乱码</span><br></pre></td></tr></table></figure><h3 id="然后在http新加一个server"><a href="#然后在http新加一个server" class="headerlink" title="然后在http新加一个server"></a>然后在http新加一个server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       2333 default_server;</span><br><span class="line">    listen       [::]:2333 default_server;</span><br><span class="line">    server_name  _;</span><br><span class="line">    root         &#x2F;file&#x2F;;</span><br><span class="line"></span><br><span class="line">    # Load configuration files for the default server block.</span><br><span class="line">    include &#x2F;etc&#x2F;nginx&#x2F;default.d&#x2F;*.conf;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 404 &#x2F;404.html;</span><br><span class="line">    location &#x3D; &#x2F;404.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 503 504 &#x2F;50x.html;</span><br><span class="line">    location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201104151110.png" alt="修改配置文件"></p><blockquote><p>修改完成后保存退出，先点Esc，然后<code>:wq</code>,回车。配置中的root /file/为文件存储位置，默认是没有file这个文件夹的，需要自己<code>sudo mkdir /file</code>创建一下。</p></blockquote><h2 id="运行Nginx"><a href="#运行Nginx" class="headerlink" title="运行Nginx"></a>运行Nginx</h2><p>运行Nginx很简单,直接<code>nginx</code>就可以了，在使用<code>nginx</code>之前最好使用<code>nginx -t</code>测试一下。</p><blockquote><p>修改配置后重新加载生效: <code>nginx -s reload</code><br>重新打开日志文件： <code>nginx -s reopen</code><br>快速停止Nginx：<code>nginx -s stop</code><br>完整有序的停止nginx：<code>nginx -s quit</code><br>测试当前配置文件是否正确：<code>nginx -t</code>  </p></blockquote><h2 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h2><p>由于上面服务我们用的2333端口，因此需要开启防火墙，这个可以直接在阿里云控制台打开，其他服务器大致相同，自行百度。</p><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201104144952.png" alt="服务器"></p><h3 id="添加规则"><a href="#添加规则" class="headerlink" title="添加规则"></a>添加规则</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201104150147.png" alt="添加规则"></p><blockquote><p>点击服务器后找到防火墙，然后点击添加规则  </p></blockquote><h3 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201104145302.png" alt="具体配置"></p><blockquote><p>应用类型：自定义<br>协议：TCP<br>端口范围：2333,具体使用的哪个端口就开哪个端口<br>备注：这里随意，可以填文件服务器  </p></blockquote><p>完成后确定即可</p><hr><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="使用FileZilla上传文件到服务器-file-测试一下。"><a href="#使用FileZilla上传文件到服务器-file-测试一下。" class="headerlink" title="使用FileZilla上传文件到服务器/file/测试一下。"></a>使用FileZilla上传文件到服务器/file/测试一下。</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201104150644.png" alt="传输文件"></p><h3 id="打开网页"><a href="#打开网页" class="headerlink" title="打开网页"></a>打开网页</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201104151658.png" alt="文件服务器网页"></p><blockquote><p>点击网抑云安装包或者直接在浏览器输入<code>服务器IP:2333/网抑云安装包.exe</code></p></blockquote><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201104152001.png" alt="下载"></p><blockquote><p>弹出下载页面</p></blockquote><p><strong>文件服务器搭建成功！！！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前段时间将GitHub上的项目&lt;a href=&quot;https://github.com/nondanee/UnblockNeteaseMusi</summary>
      
    
    
    
    
    <category term="nginx 文件服务器" scheme="https://rocsun.github.io/tags/nginx-%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>PicGo+Gitte(码云)搭建图床</title>
    <link href="https://rocsun.github.io/2020/10/25/picture-bed/"/>
    <id>https://rocsun.github.io/2020/10/25/picture-bed/</id>
    <published>2020-10-25T03:54:38.000Z</published>
    <updated>2020-10-25T09:14:53.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于编写博客的过程中需要用到大量的图片，而直接将图片与博客一起上传不仅不易维护而且会拖慢上传时间，因此便想到了搭建图床来解决博客的图片问题。由于博主是一个贫苦的大学生，因此最终选用PicGo+Gitte的免费方案来搭建图床。</p><hr><h2 id="建立Gitte图床库"><a href="#建立Gitte图床库" class="headerlink" title="建立Gitte图床库"></a>建立Gitte图床库</h2><p>首先需要一个码云的账户，注册码云的方法很简单，百度一下大家都懂，这里我就不赘述了，我们直接开始建立自己的图床仓库。</p><h3 id="点击右上角的-号，新建仓库"><a href="#点击右上角的-号，新建仓库" class="headerlink" title="点击右上角的+号，新建仓库"></a>点击右上角的+号，新建仓库</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025122332.png" alt="新建仓库"></p><h3 id="填写仓库信息"><a href="#填写仓库信息" class="headerlink" title="填写仓库信息"></a>填写仓库信息</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025122941.png" alt="仓库配置1"></p><blockquote><p>由于我已经创建了pictures仓库，所以这里提示了仓库名称已经存在，同时记得要公开仓库。</p></blockquote><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025123201.png" alt="仓库配置2"></p><blockquote><p>这里勾选Readme文件初始化仓库后码云会自动创建master分支，然后点击创建进入下一步。</p></blockquote><hr><h2 id="安装PicGo与gitee-uploader插件"><a href="#安装PicGo与gitee-uploader插件" class="headerlink" title="安装PicGo与gitee-uploader插件"></a>安装PicGo与gitee-uploader插件</h2><ul><li>PicGo</li><li>gitee-uploader</li></ul><h3 id="首先打开PicGo官网，下载对应安装包"><a href="#首先打开PicGo官网，下载对应安装包" class="headerlink" title="首先打开PicGo官网，下载对应安装包"></a>首先打开<a href="https://github.com/Molunerfinn/PicGo">PicGo官网</a>，下载对应安装包</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025124310.png" alt="PicGo安装包"></p><blockquote><p>由于我是Windows系统，所以我下载的exe文件。</p></blockquote><h3 id="安装后打开主界面如下"><a href="#安装后打开主界面如下" class="headerlink" title="安装后打开主界面如下"></a>安装后打开主界面如下</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025124425.png" alt="PicGo主界面"></p><h3 id="选择最下面的插件设置，搜索gitee"><a href="#选择最下面的插件设置，搜索gitee" class="headerlink" title="选择最下面的插件设置，搜索gitee"></a>选择最下面的插件设置，搜索gitee</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025124638.png" alt="gitee-uploader插件"></p><h3 id="点击安装gitee-uploader"><a href="#点击安装gitee-uploader" class="headerlink" title="点击安装gitee-uploader"></a>点击安装gitee-uploader</h3><p>这里注意一下，一定先安装node.js再安装插件，没装的自己百度安装一下。</p><hr><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p>安装了gitee-uploader插件后我们就开始配置插件。</p><h3 id="配置插件界面如下"><a href="#配置插件界面如下" class="headerlink" title="配置插件界面如下"></a>配置插件界面如下</h3><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025125452.png" alt="gitee-uploader配置"></p><blockquote><ul><li>repo：用户名/仓库名，如username/pictures，找不到可以在仓库的URL中复制</li><li>branch：分支，这里写master</li><li>token：gitee的私人令牌，获取方式见下面</li><li>path：仓库中的路径，一般写上img</li><li>customPath与customUrl：这两项可以不用填，提交到gitee后，会显示提交消息，插件默认提交的是<code>Upload 图片名 by PicGo - 时间</code></li></ul></blockquote><p>配置好后设为默认图库点击确定即可。</p><h3 id="gitee私人令牌获取"><a href="#gitee私人令牌获取" class="headerlink" title="gitee私人令牌获取"></a>gitee私人令牌获取</h3><ol><li><p>点击头像，进入设置<br><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025130440.png" alt="进入设置"></p></li><li><p>点击左侧安全设置中的私人令牌<br><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025130525.png" alt="私人令牌"></p></li><li><p>点击<code>+生成新令牌</code>，这里只勾选<strong>projects</strong>即可，然后点击提交<br><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025131007.png" alt="生成令牌"></p></li></ol><blockquote><p>点击提交后要求输入密码，然后会生成一串码文，那个就是私人令牌，复制到PicGo插件配置中就可以了。</p></blockquote><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025131502.png" alt="令牌"></p><blockquote><p>这里的私人令牌一定要确定复制好再关闭窗口，关闭窗口后就不能再找到令牌了，只有删除令牌再重新生成个新令牌。</p></blockquote><hr><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>经过上述操作，我们的图床就搭建完成了，最后我们来测试一下。<br><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025131853.png" alt="上传图片"></p><blockquote><p>上传可以拖拽上传也可以点击上传，也可以剪切板图片上传，这里我推荐使用Snipaste复制到剪贴板然后上传。</p></blockquote><p><img src="https://gitee.com/webpeng/pictures/raw/master/img/20201025164241.png" alt="码云图床"></p><blockquote><p>这里可以看到图片已经成功上传到Gitte了</p></blockquote><p><strong>图床搭建成功！！！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于编写博客的过程中需要用到大量的图片，而直接将图片与博客一起上传不仅不易维护而且会拖慢上传时间，因此便想到了搭建图床来解决博客的图片问题。</summary>
      
    
    
    
    
    <category term="图床" scheme="https://rocsun.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
</feed>
